% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/places and rays fcns.R
\name{hwys2endpoints}
\alias{hwys2endpoints}
\title{hwys2endpoints}
\usage{
hwys2endpoints(place, trimmed.hwys, fill.gaps = T, verbose = T, ...)
}
\arguments{
\item{fill.gaps}{whether or not to fill gaps between highway segments. Argument
\code{threshold} can also be supplied specify maximum gap distance to fill gap
btwn.}

\item{verbose}{Display additional text output in console. Makes explicit some
parameters that are passed to wrapped fcns and will say where ineligible rays
are removed due to issue described above.}

\item{...}{
  Arguments passed on to \code{\link[=trim.to.length.floors]{trim.to.length.floors}}, \code{\link[=fill.gaps]{fill.gaps}}
  \describe{
    \item{\code{minimum.segment.length}}{Minimum length (meters) that each highway ~segment~
must have in order to be eligible for rays, This differs from
\code{minimum.hwy.length} in that it filters by each separate segment, rather
than overall hwy length}
    \item{\code{minimum.hwy.length}}{Minimum length of each ~highway~ that must be inside
place boundaries for it to be ray-eligible. Differs from
\code{minimum.segment.length} in that at least one segment of hwy must meet this
threshold for ~any~ of the segments to be eligible. Only relevant if larger than
\code{minimum.segment.length}.}
    \item{\code{hwy}}{a single hwy, i.e., with single unique sign1, after divM::denode.lines
is run on it}
    \item{\code{return.gap.map}}{Return mapview leaflet to visualize output of fcn}
  }}
}
\description{
From the branch in above fcn where it checks hwy types to include, this
generates ray-constituting nodes. Can filter out very small segments; by
default removes those w/ less than .5km in place boundary
}
